// --- Studio (Low-code/No-code) ---

model StudioForm {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  fields      StudioFormField[]
  version     Int           @default(1)
  createdBy   Int?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model StudioFormField {
  id        Int        @id @default(autoincrement())
  form      StudioForm @relation(fields: [formId], references: [id])
  formId    Int
  name      String
  label     String
  type      String     // e.g. text, number, select, date, etc.
  required  Boolean    @default(false)
  options   String?    // JSON for select options, etc.
  order     Int        @default(0)
}

model StudioWorkflow {
  id          Int                @id @default(autoincrement())
  name        String
  description String?
  steps       StudioWorkflowStep[]
  version     Int                @default(1)
  active      Boolean            @default(true)
  createdBy   Int?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model StudioWorkflowStep {
  id          Int              @id @default(autoincrement())
  workflow    StudioWorkflow   @relation(fields: [workflowId], references: [id])
  workflowId  Int
  name        String
  type        String           // e.g. trigger, action, condition
  config      String           // JSON config for the step
  order       Int              @default(0)
}

model StudioUIConfig {
  id        Int      @id @default(autoincrement())
  userId    Int?
  config    String   // JSON for UI layout, theme, etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Enhanced Automation for Studio
model StudioAutomation {
  id        Int      @id @default(autoincrement())
  name      String
  trigger   String
  action    String
  config    String?  // JSON for advanced config
  active    Boolean  @default(true)
  createdBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
// Prisma schema for PettyGo ERP users

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())
  employees Employee[]
}

model Employee {
  id         Int      @id @default(autoincrement())
  name       String
  position   String
  email      String   @unique
  phone      String?
  department String?
  status     String   @default("Active")
  joinDate   DateTime @default(now())
  userId     Int?
  user       User?    @relation(fields: [userId], references: [id])
  attendances Attendance[]
  leaves     Leave[]
  shifts     Shift[]
  payrolls   Payroll[]
  documents  Document[]
  performances Performance[]
  selfServices SelfService[]
  onboardings Onboarding[]
  offboardings Offboarding[]
  cases      Case[]
  compensations Compensation[]
  expenses   Expense[]
  trainingEmployees TrainingEmployee[]
  assets     Asset[]
  compliance Compliance[]
  customFormResponses CustomFormResponse[]
  location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?
  currency   Currency? @relation(fields: [currencyId], references: [id])
  currencyId Int?
}

model Attendance {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  date       DateTime
  status     String
  checkIn    String?
  checkOut   String?
  location   String?
  ip         String?
  approved   Boolean  @default(false)
}

model Leave {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  type       String
  from       DateTime
  to         DateTime
  status     String   @default("Pending")
  balance    Int?
}

model Shift {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  name       String
  start      String
  end        String
}

model Payroll {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  period     String
  amount     Float
  status     String   @default("Processed")
}

model Document {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  type       String
  name       String
  status     String   @default("Uploaded")
}

model Performance {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  goal       String
  score      Float?
  period     String
  feedback   String?
  status     String   @default("Pending")
}

model SelfService {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  action     String
  status     String   @default("Pending")
}

model Report {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  status     String   @default("Ready")
  createdAt  DateTime @default(now())
}

// Onboarding & Offboarding
model Onboarding {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  startDate  DateTime
  checklist  String?
  status     String   @default("Initiated")
}

model Offboarding {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  endDate    DateTime
  checklist  String?
  status     String   @default("Initiated")
}

// Case Management (HR Helpdesk)
model Case {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  subject    String
  description String
  status     String   @default("Open")
  createdAt  DateTime @default(now())
}

// Compensation Management
model Compensation {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  type       String
  amount     Float
  effectiveDate DateTime
  status     String   @default("Active")
}

// Travel & Expense Management
model Expense {
  id         Int      @id @default(autoincrement())
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  type       String
  amount     Float
  description String?
  status     String   @default("Pending")
  submittedAt DateTime @default(now())
}

// Training & Development
model Training {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  startDate  DateTime
  endDate    DateTime
  employees  TrainingEmployee[]
}

model TrainingEmployee {
  id         Int      @id @default(autoincrement())
  training   Training @relation(fields: [trainingId], references: [id])
  trainingId Int
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  status     String   @default("Enrolled")
}

// Asset Management
model Asset {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  assignedTo Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?
  status     String   @default("Available")
}

// Compliance Management
model Compliance {
  id         Int      @id @default(autoincrement())
  policy     String
  acknowledgedBy Employee? @relation(fields: [employeeId], references: [id])
  employeeId Int?
  acknowledgedAt DateTime?
}

// Custom Forms
model CustomForm {
  id         Int      @id @default(autoincrement())
  name       String
  fields     String   // JSON schema
  responses  CustomFormResponse[]
}

model CustomFormResponse {
  id         Int      @id @default(autoincrement())
  form       CustomForm @relation(fields: [formId], references: [id])
  formId     Int
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  response   String   // JSON
  submittedAt DateTime @default(now())
}

// Multi-location & Multi-currency
model Location {
  id         Int      @id @default(autoincrement())
  name       String
  address    String?
  employees  Employee[]
}

model Currency {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  name       String
  symbol     String
  employees  Employee[]
}

// CRM MODULE
model Lead {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String?
  phone      String?
  company    String?
  status     String?
  source     String?
  ownerId    Int?
  createdAt  DateTime @default(now())
}

model Contact {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String?
  phone      String?
  accountId  Int?
  ownerId    Int?
  createdAt  DateTime @default(now())
}

model Account {
  id         Int      @id @default(autoincrement())
  name       String
  industry   String?
  website    String?
  phone      String?
  ownerId    Int?
  createdAt  DateTime @default(now())
}

model Deal {
  id         Int      @id @default(autoincrement())
  name       String
  stage      String
  amount     Float?
  closeDate  DateTime?
  accountId  Int?
  contactId  Int?
  ownerId    Int?
  createdAt  DateTime @default(now())
}

model Activity {
  id         Int      @id @default(autoincrement())
  type       String
  subject    String
  dueDate    DateTime?
  status     String?
  ownerId    Int?
  dealId     Int?
  contactId  Int?
  createdAt  DateTime @default(now())
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  code       String?
  description String?
  price      Float
  createdAt  DateTime @default(now())
}

model PriceBook {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  createdAt  DateTime @default(now())
}

model Quote {
  id         Int      @id @default(autoincrement())
  subject    String
  dealId     Int?
  accountId  Int?
  total      Float
  status     String?
  createdAt  DateTime @default(now())
}

model SalesOrder {
  id         Int      @id @default(autoincrement())
  subject    String
  accountId  Int?
  total      Float
  status     String?
  createdAt  DateTime @default(now())
}

model Invoice {
  id         Int      @id @default(autoincrement())
  subject    String
  accountId  Int?
  total      Float
  status     String?
  createdAt  DateTime @default(now())
}

model Campaign {
  id         Int      @id @default(autoincrement())
  name       String
  type       String?
  status     String?
  startDate  DateTime?
  endDate    DateTime?
  createdAt  DateTime @default(now())
}

model CRMCase {
  id         Int      @id @default(autoincrement())
  subject    String
  description String?
  status     String?
  contactId  Int?
  accountId  Int?
  createdAt  DateTime @default(now())
}

model Solution {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  createdAt  DateTime @default(now())
}

model Workflow {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
}

model Task {
  id         Int      @id @default(autoincrement())
  subject    String
  dueDate    DateTime?
  status     String?
  ownerId    Int?
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model Note {
  id         Int      @id @default(autoincrement())
  content    String
  ownerId    Int?
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model Email {
  id         Int      @id @default(autoincrement())
  subject    String
  body       String
  to         String
  from       String
  sentAt     DateTime?
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model Call {
  id         Int      @id @default(autoincrement())
  subject    String
  phone      String?
  callType   String?
  duration   Int?
  status     String?
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model Event {
  id         Int      @id @default(autoincrement())
  subject    String
  startDate  DateTime
  endDate    DateTime
  location   String?
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model CRMDocument {
  id         Int      @id @default(autoincrement())
  name       String
  url        String
  relatedTo  String?
  createdAt  DateTime @default(now())
}

model CRMRole {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  createdAt  DateTime @default(now())
}

model CRMProfile {
  id         Int      @id @default(autoincrement())
  name       String
  permissions String  // JSON
  createdAt  DateTime @default(now())
}

model Territory {
  id         Int      @id @default(autoincrement())
  name       String
  description String?
  createdAt  DateTime @default(now())
}

model Automation {
  id         Int      @id @default(autoincrement())
  name       String
  type       String
  config     String   // JSON
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
}

model PipelineStage {
  id        Int      @id @default(autoincrement())
  name      String
  order     Int
  description String?
  createdAt DateTime @default(now())
}
